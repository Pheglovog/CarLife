#!/bin/bash

# /**
#  * createOrgComponentSupplier - Enrolls the CA admin, registers various identities, and generates MSP and TLS certificates for the component supplier organization.
#  *
#  * This function sets up the necessary cryptographic material for the component supplier organization within a Hyperledger Fabric network.
#  * It involves enrolling the CA admin, creating directories for the organization, registering identities such as orderers and peers,
#  * and generating MSP (Membership Service Provider) and TLS (Transport Layer Security) certificates for each registered identity.
#  * The function also copies necessary configuration files and certificates to their respective directories.
#  */
function createOrgComponentSupplier() {
    infoln "Enrolling the CA admin"
    mkdir -p organizations/component_supplier.carlife.com/

    export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/component_supplier.carlife.com/

    set -x
    fabric-ca-client enroll -u https://admin:adminpw@localhost:17051 --caname ca-component_supplier --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
        Certificate: cacerts/localhost-17051-ca-component_supplier.pem
        OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
        Certificate: cacerts/localhost-17051-ca-component_supplier.pem
        OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
        Certificate: cacerts/localhost-17051-ca-component_supplier.pem
        OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
        Certificate: cacerts/localhost-17051-ca-component_supplier.pem
        OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/component_supplier.carlife.com/msp/config.yaml"

    # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

    # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
    mkdir -p "${PWD}/organizations/component_supplier.carlife.com/msp/tlscacerts"
    cp "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem" "${PWD}/organizations/component_supplier.carlife.com/msp/tlscacerts/ca.crt"

    # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
    mkdir -p "${PWD}/organizations/component_supplier.carlife.com/tlsca"
    cp "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem" "${PWD}/organizations/component_supplier.carlife.com/tlsca/tlsca.component_supplier.carlife.com-cert.pem"

    # Copy org1's CA cert to org1's /ca directory (for use by clients)
    mkdir -p "${PWD}/organizations/component_supplier.carlife.com/ca"
    cp "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem" "${PWD}/organizations/component_supplier.carlife.com/ca/ca.component_supplier.carlife.com-cert.pem"

    infoln "Registering orderer1"
    set -x
    fabric-ca-client register --caname ca-component_supplier --id.name orderer1 --id.secret orderer1pw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering cartire"
    set -x
    fabric-ca-client register --caname ca-component_supplier --id.name cartire --id.secret cartirepw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering carbody"
    set -x
    fabric-ca-client register --caname ca-component_supplier --id.name carbody --id.secret carbodypw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering carinterior"
    set -x
    fabric-ca-client register --caname ca-component_supplier --id.name carinterior --id.secret carinteriorpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering user"
    set -x
    fabric-ca-client register --caname ca-component_supplier --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering the org admin"
    set -x
    fabric-ca-client register --caname ca-component_supplier --id.name admin1 --id.secret admin1pw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    #######################################################################################################################################
    infoln "Generating the orderer1 msp"
    set -x
    fabric-ca-client enroll -u https://orderer1:orderer1pw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/orderers/orderer1.component_supplier.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/component_supplier.carlife.com/msp/config.yaml" "${PWD}/organizations/component_supplier.carlife.com/orderers/orderer1.component_supplier.carlife.com/msp/config.yaml"

    infoln "Generating the orderer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://orderer1:orderer1pw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/orderers/orderer1.component_supplier.carlife.com/tls" --enrollment.profile tls --csr.hosts orderer1.component_supplier.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
    cp "${PWD}/organizations/component_supplier.carlife.com/orderers/orderer1.component_supplier.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/component_supplier.carlife.com/orderers/orderer1.component_supplier.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/component_supplier.carlife.com/orderers/orderer1.component_supplier.carlife.com/tls/signcerts/"* "${PWD}/organizations/component_supplier.carlife.com/orderers/orderer1.component_supplier.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/component_supplier.carlife.com/orderers/orderer1.component_supplier.carlife.com/tls/keystore/"* "${PWD}/organizations/component_supplier.carlife.com/orderers/orderer1.component_supplier.carlife.com/tls/server.key"


    infoln "Generating the cartire msp"
    set -x
    fabric-ca-client enroll -u https://cartire:cartirepw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/peers/cartire.component_supplier.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/component_supplier.carlife.com/msp/config.yaml" "${PWD}/organizations/component_supplier.carlife.com/peers/cartire.component_supplier.carlife.com/msp/config.yaml"

    infoln "Generating the cartire-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://cartire:cartirepw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/peers/cartire.component_supplier.carlife.com/tls" --enrollment.profile tls --csr.hosts cartire.component_supplier.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/component_supplier.carlife.com/peers/cartire.component_supplier.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/component_supplier.carlife.com/peers/cartire.component_supplier.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/component_supplier.carlife.com/peers/cartire.component_supplier.carlife.com/tls/signcerts/"* "${PWD}/organizations/component_supplier.carlife.com/peers/cartire.component_supplier.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/component_supplier.carlife.com/peers/cartire.component_supplier.carlife.com/tls/keystore/"* "${PWD}/organizations/component_supplier.carlife.com/peers/cartire.component_supplier.carlife.com/tls/server.key"

    infoln "Generating the carbody msp"
    set -x
    fabric-ca-client enroll -u https://carbody:carbodypw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/peers/carbody.component_supplier.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/component_supplier.carlife.com/msp/config.yaml" "${PWD}/organizations/component_supplier.carlife.com/peers/carbody.component_supplier.carlife.com/msp/config.yaml"

    infoln "Generating the carbody-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://carbody:carbodypw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/peers/carbody.component_supplier.carlife.com/tls" --enrollment.profile tls --csr.hosts carbody.component_supplier.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/component_supplier.carlife.com/peers/carbody.component_supplier.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/component_supplier.carlife.com/peers/carbody.component_supplier.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/component_supplier.carlife.com/peers/carbody.component_supplier.carlife.com/tls/signcerts/"* "${PWD}/organizations/component_supplier.carlife.com/peers/carbody.component_supplier.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/component_supplier.carlife.com/peers/carbody.component_supplier.carlife.com/tls/keystore/"* "${PWD}/organizations/component_supplier.carlife.com/peers/carbody.component_supplier.carlife.com/tls/server.key"

    infoln "Generating the carinterior msp"
    set -x
    fabric-ca-client enroll -u https://carinterior:carinteriorpw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/peers/carinterior.component_supplier.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/component_supplier.carlife.com/msp/config.yaml" "${PWD}/organizations/component_supplier.carlife.com/peers/carinterior.component_supplier.carlife.com/msp/config.yaml"

    infoln "Generating the carinterior-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://carinterior:carinteriorpw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/peers/carinterior.component_supplier.carlife.com/tls" --enrollment.profile tls --csr.hosts carinterior.component_supplier.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/component_supplier.carlife.com/peers/carinterior.component_supplier.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/component_supplier.carlife.com/peers/carinterior.component_supplier.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/component_supplier.carlife.com/peers/carinterior.component_supplier.carlife.com/tls/signcerts/"* "${PWD}/organizations/component_supplier.carlife.com/peers/carinterior.component_supplier.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/component_supplier.carlife.com/peers/carinterior.component_supplier.carlife.com/tls/keystore/"* "${PWD}/organizations/component_supplier.carlife.com/peers/carinterior.component_supplier.carlife.com/tls/server.key"

    infoln "Generating the user msp"
    set -x
    fabric-ca-client enroll -u https://user1:user1pw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/users/User1@component_supplier.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/component_supplier.carlife.com/msp/config.yaml" "${PWD}/organizations/component_supplier.carlife.com/users/User1@component_supplier.carlife.com/msp/config.yaml"

    infoln "Generating the org admin msp"
    set -x
    fabric-ca-client enroll -u https://admin1:admin1pw@localhost:17051 --caname ca-component_supplier -M "${PWD}/organizations/component_supplier.carlife.com/users/Admin1@component_supplier.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/component_supplier/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/component_supplier.carlife.com/msp/config.yaml" "${PWD}/organizations/component_supplier.carlife.com/users/Admin1@component_supplier.carlife.com/msp/config.yaml"
}

# /**
#  * createOrgManufacturer - Enrolls the CA admin, registers and enrolls various identities (orderer, peers, user, admin),
#  *                         and generates MSP directories with TLS certificates for an organization named manufacturer.carlife.com.
#  *
#  * This function sets up the necessary cryptographic material for the manufacturer organization within a Hyperledger Fabric network,
#  * including enrolling the CA admin, registering identities, and generating MSP directories with appropriate TLS certificates.
#  * It uses environment variables and file paths to manage the cryptographic material and configurations.
#  */
function createOrgManufacturer() {
    infoln "Enrolling the CA admin"
    mkdir -p organizations/manufacturer.carlife.com/

    export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/manufacturer.carlife.com/

    set -x
    fabric-ca-client enroll -u https://admin:adminpw@localhost:17052 --caname ca-manufacturer --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
        Certificate: cacerts/localhost-17052-ca-manufacturer.pem
        OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
        Certificate: cacerts/localhost-17052-ca-manufacturer.pem
        OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
        Certificate: cacerts/localhost-17052-ca-manufacturer.pem
        OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
        Certificate: cacerts/localhost-17052-ca-manufacturer.pem
        OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/manufacturer.carlife.com/msp/config.yaml"

    # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

    # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
    mkdir -p "${PWD}/organizations/manufacturer.carlife.com/msp/tlscacerts"
    cp "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem" "${PWD}/organizations/manufacturer.carlife.com/msp/tlscacerts/ca.crt"

    # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
    mkdir -p "${PWD}/organizations/manufacturer.carlife.com/tlsca"
    cp "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem" "${PWD}/organizations/manufacturer.carlife.com/tlsca/tlsca.manufacturer.carlife.com-cert.pem"

    # Copy org1's CA cert to org1's /ca directory (for use by clients)
    mkdir -p "${PWD}/organizations/manufacturer.carlife.com/ca"
    cp "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem" "${PWD}/organizations/manufacturer.carlife.com/ca/ca.manufacturer.carlife.com-cert.pem"

    infoln "Registering orderer2"
    set -x
    fabric-ca-client register --caname ca-manufacturer --id.name orderer2 --id.secret orderer2pw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering factory1"
    set -x
    fabric-ca-client register --caname ca-manufacturer --id.name factory1 --id.secret factory1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering factory2"
    set -x
    fabric-ca-client register --caname ca-manufacturer --id.name factory2 --id.secret factory2pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering user"
    set -x
    fabric-ca-client register --caname ca-manufacturer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering the org admin"
    set -x
    fabric-ca-client register --caname ca-manufacturer --id.name admin1 --id.secret admin1pw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    #######################################################################################################################################
    infoln "Generating the orderer2 msp"
    set -x
    fabric-ca-client enroll -u https://orderer2:orderer2pw@localhost:17052 --caname ca-manufacturer -M "${PWD}/organizations/manufacturer.carlife.com/orderers/orderer2.manufacturer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/manufacturer.carlife.com/msp/config.yaml" "${PWD}/organizations/manufacturer.carlife.com/orderers/orderer2.manufacturer.carlife.com/msp/config.yaml"

    infoln "Generating the orderer2-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://orderer2:orderer2pw@localhost:17052 --caname ca-manufacturer -M "${PWD}/organizations/manufacturer.carlife.com/orderers/orderer2.manufacturer.carlife.com/tls" --enrollment.profile tls --csr.hosts orderer2.manufacturer.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
    cp "${PWD}/organizations/manufacturer.carlife.com/orderers/orderer2.manufacturer.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/manufacturer.carlife.com/orderers/orderer2.manufacturer.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/manufacturer.carlife.com/orderers/orderer2.manufacturer.carlife.com/tls/signcerts/"* "${PWD}/organizations/manufacturer.carlife.com/orderers/orderer2.manufacturer.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/manufacturer.carlife.com/orderers/orderer2.manufacturer.carlife.com/tls/keystore/"* "${PWD}/organizations/manufacturer.carlife.com/orderers/orderer2.manufacturer.carlife.com/tls/server.key"


    infoln "Generating the factory1 msp"
    set -x
    fabric-ca-client enroll -u https://factory1:factory1pw@localhost:17052 --caname ca-manufacturer -M "${PWD}/organizations/manufacturer.carlife.com/peers/factory1.manufacturer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/manufacturer.carlife.com/msp/config.yaml" "${PWD}/organizations/manufacturer.carlife.com/peers/factory1.manufacturer.carlife.com/msp/config.yaml"

    infoln "Generating the factory1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://factory1:factory1pw@localhost:17052 --caname ca-manufacturer -M "${PWD}/organizations/manufacturer.carlife.com/peers/factory1.manufacturer.carlife.com/tls" --enrollment.profile tls --csr.hosts factory1.manufacturer.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/manufacturer.carlife.com/peers/factory1.manufacturer.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/manufacturer.carlife.com/peers/factory1.manufacturer.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/manufacturer.carlife.com/peers/factory1.manufacturer.carlife.com/tls/signcerts/"* "${PWD}/organizations/manufacturer.carlife.com/peers/factory1.manufacturer.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/manufacturer.carlife.com/peers/factory1.manufacturer.carlife.com/tls/keystore/"* "${PWD}/organizations/manufacturer.carlife.com/peers/factory1.manufacturer.carlife.com/tls/server.key"

    infoln "Generating the factory2 msp"
    set -x
    fabric-ca-client enroll -u https://factory2:factory2pw@localhost:17052 --caname ca-manufacturer -M "${PWD}/organizations/manufacturer.carlife.com/peers/factory2.manufacturer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/manufacturer.carlife.com/msp/config.yaml" "${PWD}/organizations/manufacturer.carlife.com/peers/factory2.manufacturer.carlife.com/msp/config.yaml"

    infoln "Generating the factory2-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://factory2:factory2pw@localhost:17052 --caname ca-manufacturer -M "${PWD}/organizations/manufacturer.carlife.com/peers/factory2.manufacturer.carlife.com/tls" --enrollment.profile tls --csr.hosts factory2.manufacturer.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/manufacturer.carlife.com/peers/factory2.manufacturer.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/manufacturer.carlife.com/peers/factory2.manufacturer.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/manufacturer.carlife.com/peers/factory2.manufacturer.carlife.com/tls/signcerts/"* "${PWD}/organizations/manufacturer.carlife.com/peers/factory2.manufacturer.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/manufacturer.carlife.com/peers/factory2.manufacturer.carlife.com/tls/keystore/"* "${PWD}/organizations/manufacturer.carlife.com/peers/factory2.manufacturer.carlife.com/tls/server.key"

    infoln "Generating the user msp"
    set -x
    fabric-ca-client enroll -u https://user1:user1pw@localhost:17052 --caname ca-manufacturer -M "${PWD}/organizations/manufacturer.carlife.com/users/User1@manufacturer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/manufacturer.carlife.com/msp/config.yaml" "${PWD}/organizations/manufacturer.carlife.com/users/User1@manufacturer.carlife.com/msp/config.yaml"

    infoln "Generating the org admin msp"
    set -x
    fabric-ca-client enroll -u https://admin1:admin1pw@localhost:17052 --caname ca-manufacturer -M "${PWD}/organizations/manufacturer.carlife.com/users/Admin1@manufacturer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manufacturer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/manufacturer.carlife.com/msp/config.yaml" "${PWD}/organizations/manufacturer.carlife.com/users/Admin1@manufacturer.carlife.com/msp/config.yaml"
}

# /**
#  * createOrgInsurer - Enrolls the CA admin, registers and enrolls various identities (orderer, peers, and users),
#  *                   and generates MSP directories with TLS certificates for an insurer organization.
#  *
#  * This function sets up the necessary cryptographic material for an insurer organization within a Hyperledger Fabric network,
#  * including enrolling the CA admin, registering identities, and generating MSP directories with TLS certificates.
#  * It uses environment variables and file paths to manage the cryptographic material and configuration files.
#  */
function createOrgInsurer() {
    infoln "Enrolling the CA admin"
    mkdir -p organizations/insurer.carlife.com/

    export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/insurer.carlife.com/

    set -x
    fabric-ca-client enroll -u https://admin:adminpw@localhost:17054 --caname ca-insurer --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
        Certificate: cacerts/localhost-17054-ca-insurer.pem
        OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
        Certificate: cacerts/localhost-17054-ca-insurer.pem
        OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
        Certificate: cacerts/localhost-17054-ca-insurer.pem
        OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
        Certificate: cacerts/localhost-17054-ca-insurer.pem
        OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/insurer.carlife.com/msp/config.yaml"

    # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

    # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
    mkdir -p "${PWD}/organizations/insurer.carlife.com/msp/tlscacerts"
    cp "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem" "${PWD}/organizations/insurer.carlife.com/msp/tlscacerts/ca.crt"

    # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
    mkdir -p "${PWD}/organizations/insurer.carlife.com/tlsca"
    cp "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem" "${PWD}/organizations/insurer.carlife.com/tlsca/tlsca.insurer.carlife.com-cert.pem"

    # Copy org1's CA cert to org1's /ca directory (for use by clients)
    mkdir -p "${PWD}/organizations/insurer.carlife.com/ca"
    cp "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem" "${PWD}/organizations/insurer.carlife.com/ca/ca.insurer.carlife.com-cert.pem"

    infoln "Registering orderer3"
    set -x
    fabric-ca-client register --caname ca-insurer --id.name orderer3 --id.secret orderer3pw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering pcompany"
    set -x
    fabric-ca-client register --caname ca-insurer --id.name pcompany --id.secret pcompanypw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering rcompany"
    set -x
    fabric-ca-client register --caname ca-insurer --id.name rcompany --id.secret rcompanypw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering user"
    set -x
    fabric-ca-client register --caname ca-insurer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering the org admin"
    set -x
    fabric-ca-client register --caname ca-insurer --id.name admin1 --id.secret admin1pw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    #######################################################################################################################################
    infoln "Generating the orderer3 msp"
    set -x
    fabric-ca-client enroll -u https://orderer3:orderer3pw@localhost:17054 --caname ca-insurer -M "${PWD}/organizations/insurer.carlife.com/orderers/orderer3.insurer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/insurer.carlife.com/msp/config.yaml" "${PWD}/organizations/insurer.carlife.com/orderers/orderer3.insurer.carlife.com/msp/config.yaml"

    infoln "Generating the orderer3-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://orderer3:orderer3pw@localhost:17054 --caname ca-insurer -M "${PWD}/organizations/insurer.carlife.com/orderers/orderer3.insurer.carlife.com/tls" --enrollment.profile tls --csr.hosts orderer3.insurer.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
    cp "${PWD}/organizations/insurer.carlife.com/orderers/orderer3.insurer.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/insurer.carlife.com/orderers/orderer3.insurer.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/insurer.carlife.com/orderers/orderer3.insurer.carlife.com/tls/signcerts/"* "${PWD}/organizations/insurer.carlife.com/orderers/orderer3.insurer.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/insurer.carlife.com/orderers/orderer3.insurer.carlife.com/tls/keystore/"* "${PWD}/organizations/insurer.carlife.com/orderers/orderer3.insurer.carlife.com/tls/server.key"


    infoln "Generating the pcompany msp"
    set -x
    fabric-ca-client enroll -u https://pcompany:pcompanypw@localhost:17054 --caname ca-insurer -M "${PWD}/organizations/insurer.carlife.com/peers/pcompany.insurer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/insurer.carlife.com/msp/config.yaml" "${PWD}/organizations/insurer.carlife.com/peers/pcompany.insurer.carlife.com/msp/config.yaml"

    infoln "Generating the pcompany-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://pcompany:pcompanypw@localhost:17054 --caname ca-insurer -M "${PWD}/organizations/insurer.carlife.com/peers/pcompany.insurer.carlife.com/tls" --enrollment.profile tls --csr.hosts pcompany.insurer.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/insurer.carlife.com/peers/pcompany.insurer.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/insurer.carlife.com/peers/pcompany.insurer.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/insurer.carlife.com/peers/pcompany.insurer.carlife.com/tls/signcerts/"* "${PWD}/organizations/insurer.carlife.com/peers/pcompany.insurer.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/insurer.carlife.com/peers/pcompany.insurer.carlife.com/tls/keystore/"* "${PWD}/organizations/insurer.carlife.com/peers/pcompany.insurer.carlife.com/tls/server.key"

    infoln "Generating the rcompany msp"
    set -x
    fabric-ca-client enroll -u https://rcompany:rcompanypw@localhost:17054 --caname ca-insurer -M "${PWD}/organizations/insurer.carlife.com/peers/rcompany.insurer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/insurer.carlife.com/msp/config.yaml" "${PWD}/organizations/insurer.carlife.com/peers/rcompany.insurer.carlife.com/msp/config.yaml"

    infoln "Generating the rcompany-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://rcompany:rcompanypw@localhost:17054 --caname ca-insurer -M "${PWD}/organizations/insurer.carlife.com/peers/rcompany.insurer.carlife.com/tls" --enrollment.profile tls --csr.hosts rcompany.insurer.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/insurer.carlife.com/peers/rcompany.insurer.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/insurer.carlife.com/peers/rcompany.insurer.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/insurer.carlife.com/peers/rcompany.insurer.carlife.com/tls/signcerts/"* "${PWD}/organizations/insurer.carlife.com/peers/rcompany.insurer.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/insurer.carlife.com/peers/rcompany.insurer.carlife.com/tls/keystore/"* "${PWD}/organizations/insurer.carlife.com/peers/rcompany.insurer.carlife.com/tls/server.key"

    infoln "Generating the user msp"
    set -x
    fabric-ca-client enroll -u https://user1:user1pw@localhost:17054 --caname ca-insurer -M "${PWD}/organizations/insurer.carlife.com/users/User1@insurer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/insurer.carlife.com/msp/config.yaml" "${PWD}/organizations/insurer.carlife.com/users/User1@insurer.carlife.com/msp/config.yaml"

    infoln "Generating the org admin msp"
    set -x
    fabric-ca-client enroll -u https://admin1:admin1pw@localhost:17054 --caname ca-insurer -M "${PWD}/organizations/insurer.carlife.com/users/Admin1@insurer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/insurer.carlife.com/msp/config.yaml" "${PWD}/organizations/insurer.carlife.com/users/Admin1@insurer.carlife.com/msp/config.yaml"
}


# /**
#  * createOrgStore - Enrolls the CA admin, registers and enrolls peers, users, and the org admin for the store.carlife.com organization.
#  * This function sets up the necessary cryptographic material and configurations for the specified organization to participate in the blockchain network.
#  * It involves creating directories, enrolling the CA admin, registering identities, generating MSP directories, and TLS certificates for peers.
#  */
function createOrgStore() {
    infoln "Enrolling the CA admin"
    mkdir -p organizations/store.carlife.com/

    export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/store.carlife.com/

    set -x
    fabric-ca-client enroll -u https://admin:adminpw@localhost:17053 --caname ca-store --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
        Certificate: cacerts/localhost-17053-ca-store.pem
        OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
        Certificate: cacerts/localhost-17053-ca-store.pem
        OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
        Certificate: cacerts/localhost-17053-ca-store.pem
        OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
        Certificate: cacerts/localhost-17053-ca-store.pem
        OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/store.carlife.com/msp/config.yaml"

    # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

    # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
    mkdir -p "${PWD}/organizations/store.carlife.com/msp/tlscacerts"
    cp "${PWD}/organizations/fabric-ca/store/ca-cert.pem" "${PWD}/organizations/store.carlife.com/msp/tlscacerts/ca.crt"

    # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
    mkdir -p "${PWD}/organizations/store.carlife.com/tlsca"
    cp "${PWD}/organizations/fabric-ca/store/ca-cert.pem" "${PWD}/organizations/store.carlife.com/tlsca/tlsca.store.carlife.com-cert.pem"

    # Copy org1's CA cert to org1's /ca directory (for use by clients)
    mkdir -p "${PWD}/organizations/store.carlife.com/ca"
    cp "${PWD}/organizations/fabric-ca/store/ca-cert.pem" "${PWD}/organizations/store.carlife.com/ca/ca.store.carlife.com-cert.pem"

    infoln "Registering sailer1"
    set -x
    fabric-ca-client register --caname ca-store --id.name sailer1 --id.secret sailer1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering sailer2"
    set -x
    fabric-ca-client register --caname ca-store --id.name sailer2 --id.secret sailer2pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering user"
    set -x
    fabric-ca-client register --caname ca-store --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering the org admin"
    set -x
    fabric-ca-client register --caname ca-store --id.name admin1 --id.secret admin1pw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    #######################################################################################################################################
    infoln "Generating the sailer1 msp"
    set -x
    fabric-ca-client enroll -u https://sailer1:sailer1pw@localhost:17053 --caname ca-store -M "${PWD}/organizations/store.carlife.com/peers/sailer1.store.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/store.carlife.com/msp/config.yaml" "${PWD}/organizations/store.carlife.com/peers/sailer1.store.carlife.com/msp/config.yaml"

    infoln "Generating the sailer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://sailer1:sailer1pw@localhost:17053 --caname ca-store -M "${PWD}/organizations/store.carlife.com/peers/sailer1.store.carlife.com/tls" --enrollment.profile tls --csr.hosts sailer1.store.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/store.carlife.com/peers/sailer1.store.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/store.carlife.com/peers/sailer1.store.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/store.carlife.com/peers/sailer1.store.carlife.com/tls/signcerts/"* "${PWD}/organizations/store.carlife.com/peers/sailer1.store.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/store.carlife.com/peers/sailer1.store.carlife.com/tls/keystore/"* "${PWD}/organizations/store.carlife.com/peers/sailer1.store.carlife.com/tls/server.key"

    infoln "Generating the sailer2 msp"
    set -x
    fabric-ca-client enroll -u https://sailer2:sailer2pw@localhost:17053 --caname ca-store -M "${PWD}/organizations/store.carlife.com/peers/sailer2.store.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/store.carlife.com/msp/config.yaml" "${PWD}/organizations/store.carlife.com/peers/sailer2.store.carlife.com/msp/config.yaml"

    infoln "Generating the sailer2-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://sailer2:sailer2pw@localhost:17053 --caname ca-store -M "${PWD}/organizations/store.carlife.com/peers/sailer2.store.carlife.com/tls" --enrollment.profile tls --csr.hosts sailer2.store.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/store.carlife.com/peers/sailer2.store.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/store.carlife.com/peers/sailer2.store.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/store.carlife.com/peers/sailer2.store.carlife.com/tls/signcerts/"* "${PWD}/organizations/store.carlife.com/peers/sailer2.store.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/store.carlife.com/peers/sailer2.store.carlife.com/tls/keystore/"* "${PWD}/organizations/store.carlife.com/peers/sailer2.store.carlife.com/tls/server.key"

    infoln "Generating the user msp"
    set -x
    fabric-ca-client enroll -u https://user1:user1pw@localhost:17053 --caname ca-store -M "${PWD}/organizations/store.carlife.com/users/User1@store.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/store.carlife.com/msp/config.yaml" "${PWD}/organizations/store.carlife.com/users/User1@store.carlife.com/msp/config.yaml"

    infoln "Generating the org admin msp"
    set -x
    fabric-ca-client enroll -u https://admin1:admin1pw@localhost:17053 --caname ca-store -M "${PWD}/organizations/store.carlife.com/users/Admin1@store.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/store/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/store.carlife.com/msp/config.yaml" "${PWD}/organizations/store.carlife.com/users/Admin1@store.carlife.com/msp/config.yaml"
}


# /**
#  * createOrgMaintenancer - Enrolls the CA admin, registers and enrolls various identities (fixer1, fixer2, user, and org admin),
#  *                          and generates their respective MSP directories and TLS certificates.
#  * @return {void}
#  */
function createOrgMaintenancer() {
    infoln "Enrolling the CA admin"
    mkdir -p organizations/maintenancer.carlife.com/

    export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/maintenancer.carlife.com/

    set -x
    fabric-ca-client enroll -u https://admin:adminpw@localhost:17055 --caname ca-maintenancer --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
        Certificate: cacerts/localhost-17055-ca-maintenancer.pem
        OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
        Certificate: cacerts/localhost-17055-ca-maintenancer.pem
        OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
        Certificate: cacerts/localhost-17055-ca-maintenancer.pem
        OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
        Certificate: cacerts/localhost-17055-ca-maintenancer.pem
        OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/maintenancer.carlife.com/msp/config.yaml"

    # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

    # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
    mkdir -p "${PWD}/organizations/maintenancer.carlife.com/msp/tlscacerts"
    cp "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem" "${PWD}/organizations/maintenancer.carlife.com/msp/tlscacerts/ca.crt"

    # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
    mkdir -p "${PWD}/organizations/maintenancer.carlife.com/tlsca"
    cp "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem" "${PWD}/organizations/maintenancer.carlife.com/tlsca/tlsca.maintenancer.carlife.com-cert.pem"

    # Copy org1's CA cert to org1's /ca directory (for use by clients)
    mkdir -p "${PWD}/organizations/maintenancer.carlife.com/ca"
    cp "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem" "${PWD}/organizations/maintenancer.carlife.com/ca/ca.maintenancer.carlife.com-cert.pem"

    infoln "Registering fixer1"
    set -x
    fabric-ca-client register --caname ca-maintenancer --id.name fixer1 --id.secret fixer1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering fixer2"
    set -x
    fabric-ca-client register --caname ca-maintenancer --id.name fixer2 --id.secret fixer2pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering user"
    set -x
    fabric-ca-client register --caname ca-maintenancer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering the org admin"
    set -x
    fabric-ca-client register --caname ca-maintenancer --id.name admin1 --id.secret admin1pw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    #######################################################################################################################################
    infoln "Generating the fixer1 msp"
    set -x
    fabric-ca-client enroll -u https://fixer1:fixer1pw@localhost:17055 --caname ca-maintenancer -M "${PWD}/organizations/maintenancer.carlife.com/peers/fixer1.maintenancer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/maintenancer.carlife.com/msp/config.yaml" "${PWD}/organizations/maintenancer.carlife.com/peers/fixer1.maintenancer.carlife.com/msp/config.yaml"

    infoln "Generating the fixer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://fixer1:fixer1pw@localhost:17055 --caname ca-maintenancer -M "${PWD}/organizations/maintenancer.carlife.com/peers/fixer1.maintenancer.carlife.com/tls" --enrollment.profile tls --csr.hosts fixer1.maintenancer.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/maintenancer.carlife.com/peers/fixer1.maintenancer.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/maintenancer.carlife.com/peers/fixer1.maintenancer.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/maintenancer.carlife.com/peers/fixer1.maintenancer.carlife.com/tls/signcerts/"* "${PWD}/organizations/maintenancer.carlife.com/peers/fixer1.maintenancer.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/maintenancer.carlife.com/peers/fixer1.maintenancer.carlife.com/tls/keystore/"* "${PWD}/organizations/maintenancer.carlife.com/peers/fixer1.maintenancer.carlife.com/tls/server.key"

    infoln "Generating the fixer2 msp"
    set -x
    fabric-ca-client enroll -u https://fixer2:fixer2pw@localhost:17055 --caname ca-maintenancer -M "${PWD}/organizations/maintenancer.carlife.com/peers/fixer2.maintenancer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/maintenancer.carlife.com/msp/config.yaml" "${PWD}/organizations/maintenancer.carlife.com/peers/fixer2.maintenancer.carlife.com/msp/config.yaml"

    infoln "Generating the fixer2-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://fixer2:fixer2pw@localhost:17055 --caname ca-maintenancer -M "${PWD}/organizations/maintenancer.carlife.com/peers/fixer2.maintenancer.carlife.com/tls" --enrollment.profile tls --csr.hosts fixer2.maintenancer.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/maintenancer.carlife.com/peers/fixer2.maintenancer.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/maintenancer.carlife.com/peers/fixer2.maintenancer.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/maintenancer.carlife.com/peers/fixer2.maintenancer.carlife.com/tls/signcerts/"* "${PWD}/organizations/maintenancer.carlife.com/peers/fixer2.maintenancer.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/maintenancer.carlife.com/peers/fixer2.maintenancer.carlife.com/tls/keystore/"* "${PWD}/organizations/maintenancer.carlife.com/peers/fixer2.maintenancer.carlife.com/tls/server.key"

    infoln "Generating the user msp"
    set -x
    fabric-ca-client enroll -u https://user1:user1pw@localhost:17055 --caname ca-maintenancer -M "${PWD}/organizations/maintenancer.carlife.com/users/User1@maintenancer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/maintenancer.carlife.com/msp/config.yaml" "${PWD}/organizations/maintenancer.carlife.com/users/User1@maintenancer.carlife.com/msp/config.yaml"

    infoln "Generating the org admin msp"
    set -x
    fabric-ca-client enroll -u https://admin1:admin1pw@localhost:17055 --caname ca-maintenancer -M "${PWD}/organizations/maintenancer.carlife.com/users/Admin1@maintenancer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/maintenancer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/maintenancer.carlife.com/msp/config.yaml" "${PWD}/organizations/maintenancer.carlife.com/users/Admin1@maintenancer.carlife.com/msp/config.yaml"
}


# /**
#  * createOrgConsumer - Enrolls the CA admin, registers users and org admin, and generates MSPs and TLS certificates for the consumer organization.
#  * This function sets up the necessary cryptographic material for the consumer organization within a Hyperledger Fabric network.
#  * It involves creating directories, enrolling the CA admin, registering various identities, and generating MSP and TLS certificates for peers, clients, and admins.
#  * The function uses environment variables and file paths to manage certificate locations and configurations.
#  */
function createOrgConsumer() {
    infoln "Enrolling the CA admin"
    mkdir -p organizations/consumer.carlife.com/

    export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/consumer.carlife.com/

    set -x
    fabric-ca-client enroll -u https://admin:adminpw@localhost:17056 --caname ca-consumer --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
    { set +x; } 2>/dev/null

    echo 'NodeOUs:
    Enable: true
    ClientOUIdentifier:
        Certificate: cacerts/localhost-17056-ca-consumer.pem
        OrganizationalUnitIdentifier: client
    PeerOUIdentifier:
        Certificate: cacerts/localhost-17056-ca-consumer.pem
        OrganizationalUnitIdentifier: peer
    AdminOUIdentifier:
        Certificate: cacerts/localhost-17056-ca-consumer.pem
        OrganizationalUnitIdentifier: admin
    OrdererOUIdentifier:
        Certificate: cacerts/localhost-17056-ca-consumer.pem
        OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/consumer.carlife.com/msp/config.yaml"

    # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

    # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
    mkdir -p "${PWD}/organizations/consumer.carlife.com/msp/tlscacerts"
    cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/consumer.carlife.com/msp/tlscacerts/ca.crt"

    # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
    mkdir -p "${PWD}/organizations/consumer.carlife.com/tlsca"
    cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/consumer.carlife.com/tlsca/tlsca.consumer.carlife.com-cert.pem"

    # Copy org1's CA cert to org1's /ca directory (for use by clients)
    mkdir -p "${PWD}/organizations/consumer.carlife.com/ca"
    cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/consumer.carlife.com/ca/ca.consumer.carlife.com-cert.pem"

    infoln "Registering user1"
    set -x
    fabric-ca-client register --caname ca-consumer --id.name user1 --id.secret user1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering user"
    set -x
    fabric-ca-client register --caname ca-consumer --id.name user0 --id.secret user0pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
    { set +x; } 2>/dev/null

    infoln "Registering the org admin"
    set -x
    fabric-ca-client register --caname ca-consumer --id.name admin1 --id.secret admin1pw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
    { set +x; } 2>/dev/null

    #######################################################################################################################################
    infoln "Generating the user1 msp"
    set -x
    fabric-ca-client enroll -u https://user1:user1pw@localhost:17056 --caname ca-consumer -M "${PWD}/organizations/consumer.carlife.com/peers/user1.consumer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
    { set +x; } 2>/dev/null
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/consumer.carlife.com/msp/config.yaml" "${PWD}/organizations/consumer.carlife.com/peers/user1.consumer.carlife.com/msp/config.yaml"

    infoln "Generating the user1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
    set -x
    fabric-ca-client enroll -u https://user1:user1pw@localhost:17056 --caname ca-consumer -M "${PWD}/organizations/consumer.carlife.com/peers/user1.consumer.carlife.com/tls" --enrollment.profile tls --csr.hosts user1.consumer.carlife.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
    { set +x; } 2>/dev/null

    # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
    cp "${PWD}/organizations/consumer.carlife.com/peers/user1.consumer.carlife.com/tls/tlscacerts/"* "${PWD}/organizations/consumer.carlife.com/peers/user1.consumer.carlife.com/tls/ca.crt"
    cp "${PWD}/organizations/consumer.carlife.com/peers/user1.consumer.carlife.com/tls/signcerts/"* "${PWD}/organizations/consumer.carlife.com/peers/user1.consumer.carlife.com/tls/server.crt"
    cp "${PWD}/organizations/consumer.carlife.com/peers/user1.consumer.carlife.com/tls/keystore/"* "${PWD}/organizations/consumer.carlife.com/peers/user1.consumer.carlife.com/tls/server.key"

    infoln "Generating the user msp"
    set -x
    fabric-ca-client enroll -u https://user0:user0pw@localhost:17056 --caname ca-consumer -M "${PWD}/organizations/consumer.carlife.com/users/User1@consumer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/consumer.carlife.com/msp/config.yaml" "${PWD}/organizations/consumer.carlife.com/users/User1@consumer.carlife.com/msp/config.yaml"

    infoln "Generating the org admin msp"
    set -x
    fabric-ca-client enroll -u https://admin1:admin1pw@localhost:17056 --caname ca-consumer -M "${PWD}/organizations/consumer.carlife.com/users/Admin1@consumer.carlife.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
    { set +x; } 2>/dev/null

    cp "${PWD}/organizations/consumer.carlife.com/msp/config.yaml" "${PWD}/organizations/consumer.carlife.com/users/Admin1@consumer.carlife.com/msp/config.yaml"
}

